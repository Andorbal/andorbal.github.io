---
layout: post
title:  "Deploying SSL on a build server"
date:   2016-01-23 00:10:00
categories: operations server configuration
---

For various reasons, I've decided to run my own build server. Getting [Jenkins](https://jenkins-ci.org/) running on a [Digital Ocean](https://www.digitalocean.com/) droplet is relatively quick and easy, but the default installation is not very secure. Anyone can do anything in Jenkins and everything is served over plain text. The first problem is easy to fix, but I had my doubts about the second.

Turns out? Not so bad.

I've been following [Let's Encrypt](https://letsencrypt.org/) for a while but have not had any need to use them. This project gave me a chance to give it a spin. My droplet's OS didn't seem to have a package for it, but getting the utility just required cloning a [git repository](https://github.com/letsencrypt/letsencrypt). With that downloaded, I had my first certificate created in just a few minutes. I took their advice and created a certificate using their test server, which caused the security notice to appear in Chrome. This was expected, but while inspecting the security settings, I noticed that I was using outdated cipher suites.

I decided to use [Nginx](http://nginx.org/) to handle the SSL termination because it seemed easier than trying to get Jenkins to do it. I also figured it would be a decent way to introduce myself to it. I followed a [basic guide](https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-with-ssl-as-a-reverse-proxy-for-jenkins) on how to set up Nginx to reverse proxy to Jenkins. It worked, in that I was able to access Jenkins through the proxy, but the security settings led to the warning about outdated cipher suites.

Then I stumbled upon an [article](https://certsimple.com/blog/chrome-outdated-cryptography) discussing cipher suites, and it had a link to an [SSL configuration generator](https://mozilla.github.io/server-side-tls/ssl-config-generator/) run by Mozilla. Using the values suggested by this tool helped fix the warning, and after I regenerated by certificate using the real Let's Encrypt server, Chrome reports no issues with the secure connection.

Jenkins was still available through other non-secure ports, but a quick application of the [UncomplicatedFirewall](https://wiki.ubuntu.com/UncomplicatedFirewall) shut that down. Now I've got a working and reasonably secure build server, all within a few hours.

Now I just need to fix the broken builds ;)
